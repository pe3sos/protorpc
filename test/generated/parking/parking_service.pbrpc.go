// Code generated by protoc-gen-go-protorpc. DO NOT EDIT.
// versions:
// 	protoc-gen-go-protorpc (unknown)
// 	protoc        v3.11.4
// source: parking/parking_service.proto

package parking

import (
	context "context"
	fmt "fmt"
	empty "github.com/golang/protobuf/ptypes/empty"
	protorpc "github.com/zippunov/protorpc"
	proto "google.golang.org/protobuf/proto"
)

// WebSocket Server API for ParkingService service

type ParkingServiceService interface {
	CurrentCapacity(ctx context.Context, in *empty.Empty) (*CapacityResponse, error)

	TakeSlot(ctx context.Context, in *PlateRequest) (*TakeSlotResponse, error)

	CurrentBilling(ctx context.Context, in *PlateRequest) (*CurrentBillingResponse, error)

	FreeSlot(ctx context.Context, in *PlateRequest) (*FreeSlotResponse, error)
}

func ParkingServiceCurrentCapacityHandler(implementation interface{}, ctx context.Context, payload proto.Message) (proto.Message, error) {
	in, ok := payload.(*empty.Empty)
	if !ok {
		return nil, fmt.Errorf("input is not of type *empty.Empty")
	}
	out, error := implementation.(ParkingServiceService).CurrentCapacity(ctx, in)
	if error != nil {
		return nil, error
	}
	return out, nil
}

func ParkingServiceTakeSlotHandler(implementation interface{}, ctx context.Context, payload proto.Message) (proto.Message, error) {
	in, ok := payload.(*PlateRequest)
	if !ok {
		return nil, fmt.Errorf("input is not of type *PlateRequest")
	}
	out, error := implementation.(ParkingServiceService).TakeSlot(ctx, in)
	if error != nil {
		return nil, error
	}
	return out, nil
}

func ParkingServiceCurrentBillingHandler(implementation interface{}, ctx context.Context, payload proto.Message) (proto.Message, error) {
	in, ok := payload.(*PlateRequest)
	if !ok {
		return nil, fmt.Errorf("input is not of type *PlateRequest")
	}
	out, error := implementation.(ParkingServiceService).CurrentBilling(ctx, in)
	if error != nil {
		return nil, error
	}
	return out, nil
}

func ParkingServiceFreeSlotHandler(implementation interface{}, ctx context.Context, payload proto.Message) (proto.Message, error) {
	in, ok := payload.(*PlateRequest)
	if !ok {
		return nil, fmt.Errorf("input is not of type *PlateRequest")
	}
	out, error := implementation.(ParkingServiceService).FreeSlot(ctx, in)
	if error != nil {
		return nil, error
	}
	return out, nil
}

var ParkingServiceServiceDescriptor = protorpc.ServiceDescriptor{
	Name:        "parking.ParkingService",
	HandlerType: (*ParkingServiceService)(nil),
	Methods: []protorpc.MethodMap{
		{
			Name:    "CurrentCapacity",
			Handler: ParkingServiceCurrentCapacityHandler,
		},
		{
			Name:    "TakeSlot",
			Handler: ParkingServiceTakeSlotHandler,
		},
		{
			Name:    "CurrentBilling",
			Handler: ParkingServiceCurrentBillingHandler,
		},
		{
			Name:    "FreeSlot",
			Handler: ParkingServiceFreeSlotHandler,
		},
	},
	About: "",
}
